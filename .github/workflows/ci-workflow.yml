name: CI workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-app:
    name: Build and Test App
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    defaults:
      run:
        working-directory: app
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 12
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run eslint-output
    - name: Upload eslint report
      uses: actions/upload-artifact@v2
      with:
        name: app-eslint-report
        path: ./app/build/report.json
  build-test-server:
    name: Build and Test Server
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    defaults:
      run:
        working-directory: server
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 12
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run eslint-output
    - name: Upload eslint report
      uses: actions/upload-artifact@v2
      with:
        name: server-eslint-report
        path: server/build/report.json
  sonar-scanner:
    name: Run Sonar Scanner
    runs-on: ubuntu-latest
    needs: [ build-test-app, build-test-server ]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Download app eslint report
      uses: actions/download-artifact@v2
      with:
        name: app-eslint-report
        path: app/build
    - name: Download server eslint report
      uses: actions/download-artifact@v2
      with:
        name: server-eslint-report
        path: ./server/build
    - run: ./scripts/update-sonar-version.sh
    - uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  ci-skip:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@v1
        with:
          commit-filter: '[skip ci]'
